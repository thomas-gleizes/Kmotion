// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  slug      String   @unique @db.VarChar(255)
  isAdmin   Boolean  @default(false) @map("is_admin")
  activate  Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  playlists Playlist[]

  @@map("users")
  Music Music[]
}

model Music {
  id           Int      @id @default(autoincrement())
  title        String   @db.VarChar(255)
  artist       String?   @db.VarChar(128)
  album        String?   @db.VarChar(128)
  youtubeId    String   @unique @map("youtube_id") @db.VarChar(24)
  ready        Boolean  @default(false)
  releaseDate  DateTime @map("release_date") @db.DateTime
  details      String   @db.Text
  downloaderId Int      @map("downloader_id")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @map("updated_at")

  playlistEntries PlaylistEntry[]
  downloader      User            @relation(fields: [downloaderId], references: [id])

  @@map("musics")
}

model Playlist {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  description String   @db.VarChar(255)
  slug        String   @unique @db.VarChar(255)
  authorId    Int      @map("author_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @map("updated_at")

  author  User            @relation(fields: [authorId], references: [id])
  entries PlaylistEntry[]

  @@map("playlists")
}

model PlaylistEntry {
  playlistId Int @map("playlist_id")
  musicId    Int @map("music_id")
  position   Int

  playlist Playlist @relation(fields: [playlistId], references: [id])
  music    Music    @relation(fields: [musicId], references: [id])

  @@id([playlistId, musicId])
  @@unique([playlistId, position])
  @@map("playlist_entries")
}
